{
	"info": {
		"_postman_id": "cee6aa6f-d42d-486a-800c-852f2a6ec946",
		"name": "NewTestCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38616800"
	},
	"item": [
		{
			"name": "knolx",
			"item": [
				{
					"name": "create knolx",
					"item": [
						{
							"name": "Postive test",
							"item": [
								{
									"name": "Post Request",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"pm.test('Returns 200', function () {",
													"    try {",
													"        pm.test('Status code is 201', function () {",
													"            pm.response.to.have.code(201);",
													"        });",
													"    } catch (e) {",
													"        const response = pm.response;",
													"        if (response.code !== 201) {",
													"            throw new Error(`Expected status 201, but got ${ response.code }`);",
													"        }",
													"    }",
													"});",
													"",
													"pm.test('Returns 200', function () {",
													"    const response = pm.response;",
													"    const body = JSON.parse(response.text());",
													"    pm.expect(body).to.have.property('name').that.is.a('string');",
													"    pm.expect(body.name).to.equal('Shrasti Gupta');",
													"    pm.expect(body.username).to.equal('shrastigupta99');",
													"    pm.expect(body.email).to.equal('shrasti@123');",
													"    try {",
													"        pm.test('Status code is 201', function () {",
													"            pm.response.to.have.code(201);",
													"        });",
													"    } catch (e) {",
													"        const response = pm.response;",
													"        if (response.code !== 201) {",
													"            throw new Error(`Expected status 201, but got ${ response.code }`);",
													"        }",
													"    }",
													"});"
												]
											}
										}
									],
									"protocolProfileBehavior": {
										"followRedirects": true,
										"disableUrlEncoding": false,
										"disableCookies": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "User-Agent",
												"value": "insomnia/10.0.0"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Shrasti Gupta\",\n  \"username\": \"shrastigupta99\",\n  \"email\": \"shrasti@123\"\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://jsonplaceholder.typicode.com/users",
											"protocol": "https",
											"host": [
												"jsonplaceholder",
												"typicode",
												"com"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Negative Test",
							"item": [
								{
									"name": "SC400_create knolx with passing invalid userName",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "https://api-inference.huggingface.co/models/Qwen/Qwen2.5-Coder-32B-Instruct",
											"protocol": "https",
											"host": [
												"api-inference",
												"huggingface",
												"co"
											],
											"path": [
												"models",
												"Qwen",
												"Qwen2.5-Coder-32B-Instruct"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "get knolx",
					"item": []
				},
				{
					"name": "update knox",
					"item": []
				},
				{
					"name": "delete knolx",
					"item": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		}
	]
}